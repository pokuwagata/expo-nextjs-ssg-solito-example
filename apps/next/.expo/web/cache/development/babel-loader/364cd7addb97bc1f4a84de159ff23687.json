{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _hammerjs = _interopRequireDefault(require(\"@egjs/hammerjs\"));\n\nvar _IndiscreteGestureHandler = _interopRequireDefault(require(\"./IndiscreteGestureHandler\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar PinchGestureHandler = function (_IndiscreteGestureHan) {\n  _inherits(PinchGestureHandler, _IndiscreteGestureHan);\n\n  var _super = _createSuper(PinchGestureHandler);\n\n  function PinchGestureHandler() {\n    _classCallCheck(this, PinchGestureHandler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PinchGestureHandler, [{\n    key: \"name\",\n    get: function get() {\n      return 'pinch';\n    }\n  }, {\n    key: \"NativeGestureClass\",\n    get: function get() {\n      return _hammerjs.default.Pinch;\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent(_ref) {\n      var scale = _ref.scale,\n          velocity = _ref.velocity,\n          center = _ref.center;\n      return {\n        focalX: center.x,\n        focalY: center.y,\n        velocity: velocity,\n        scale: scale\n      };\n    }\n  }]);\n\n  return PinchGestureHandler;\n}(_IndiscreteGestureHandler.default);\n\nvar _default = PinchGestureHandler;\nexports.default = _default;","map":{"version":3,"sources":["PinchGestureHandler.ts"],"names":["IndiscreteGestureHandler","name","NativeGestureClass","Hammer","transformNativeEvent","center","focalX","focalY","velocity","scale","PinchGestureHandler"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;;AAGA,IAAA,yBAAA,GAAA,sBAAA,CAAA,OAAA,8BAAA,CAAA;;;;;;;;IAEA,mB;;;;;;;;;;;;;SACMC,eAAO;AACT,aAAA,OAAA;AACD;;;SAEGC,eAAqB;AACvB,aAAOC,SAAAA,CAAAA,OAAAA,CAAP,KAAA;AACD;;;WAEDC,oCAAkE;AAAA,UAA7C,KAA6C,QAA7C,KAA6C;AAAA,UAA7C,QAA6C,QAA7C,QAA6C;AAAA,UAA1BC,MAA0B,QAA1BA,MAA0B;AAChE,aAAO;AACLC,QAAAA,MAAM,EAAED,MAAM,CADT,CAAA;AAELE,QAAAA,MAAM,EAAEF,MAAM,CAFT,CAAA;AAGLG,QAAAA,QAHK,EAGLA,QAHK;AAILC,QAAAA,KAAAA,EAAAA;AAJK,OAAP;AAMD;;;;EAhB+BT,yBAAAA,CAAlC,O;;eAmBeU,mB","sourcesContent":["import Hammer from '@egjs/hammerjs';\nimport { HammerInputExt } from './GestureHandler';\n\nimport IndiscreteGestureHandler from './IndiscreteGestureHandler';\n\nclass PinchGestureHandler extends IndiscreteGestureHandler {\n  get name() {\n    return 'pinch';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Pinch;\n  }\n\n  transformNativeEvent({ scale, velocity, center }: HammerInputExt) {\n    return {\n      focalX: center.x,\n      focalY: center.y,\n      velocity,\n      scale,\n    };\n  }\n}\n\nexport default PinchGestureHandler;\n"]},"metadata":{},"sourceType":"script"}