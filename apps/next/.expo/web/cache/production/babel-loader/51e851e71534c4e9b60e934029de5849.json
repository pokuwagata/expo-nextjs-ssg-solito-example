{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"href\",\"target\"];import React,{forwardRef}from'react';import Linking from\"react-native-web/dist/exports/Linking\";import Platform from\"react-native-web/dist/exports/Platform\";import Text from\"../primitives/Text\";export var A=forwardRef(function(_ref,ref){var href=_ref.href,target=_ref.target,props=_objectWithoutProperties(_ref,_excluded);var nativeProps=Platform.select({web:{href:href,target:target},default:{onPress:function onPress(event){props.onPress&&props.onPress(event);if(Platform.OS!=='web'&&href!==undefined){Linking.openURL(href);}}}});return React.createElement(Text,_extends({accessibilityRole:\"link\"},props,nativeProps,{ref:ref}));});","map":{"version":3,"sources":["../../src/elements/Anchor.tsx"],"names":[],"mappings":"0KAAA,MAAO,CAAA,KAAP,EAA+B,UAA/B,KAAiD,OAAjD,C,wHAGA,MAAO,CAAA,IAAP,0BAGA,MAAO,IAAM,CAAA,CAAC,CAAG,UAAU,CAAC,cAAwC,GAAxC,CAA+C,IAA5C,CAAA,IAA4C,MAA5C,IAA4C,CAAtC,MAAsC,MAAtC,MAAsC,CAA3B,KAA2B,0CACzE,GAAM,CAAA,WAAW,CAAG,QAAQ,CAAC,MAAT,CAA2B,CAC7C,GAAG,CAAE,CACH,IAAI,CAAJ,IADG,CAEH,MAAM,CAAN,MAFG,CADwC,CAK7C,OAAO,CAAE,CACP,OAAO,CAAE,iBAAA,KAAK,CAAG,CACf,KAAK,CAAC,OAAN,EAAiB,KAAK,CAAC,OAAN,CAAc,KAAd,CAAjB,CACA,GAAI,QAAQ,CAAC,EAAT,GAAgB,KAAhB,EAAyB,IAAI,GAAK,SAAtC,CAAiD,CAC/C,OAAO,CAAC,OAAR,CAAgB,IAAhB,EACD,CACF,CANM,CALoC,CAA3B,CAApB,CAcA,MAAO,CAAA,KAAA,CAAA,aAAA,CAAC,IAAD,CAAK,SAAA,CAAC,iBAAiB,CAAC,MAAnB,CAAA,CAA8B,KAA9B,CAAyC,WAAzC,CAAoD,CAAE,GAAG,CAAE,GAAP,CAApD,CAAL,CAAP,CACD,CAhB0B,CAApB","sourcesContent":["import React, { ComponentType, forwardRef } from 'react';\nimport { Linking, Platform } from 'react-native';\n\nimport Text from '../primitives/Text';\nimport { LinkProps } from './Text.types';\n\nexport const A = forwardRef(({ href, target, ...props }: LinkProps, ref) => {\n  const nativeProps = Platform.select<LinkProps>({\n    web: {\n      href,\n      target,\n    },\n    default: {\n      onPress: event => {\n        props.onPress && props.onPress(event);\n        if (Platform.OS !== 'web' && href !== undefined) {\n          Linking.openURL(href);\n        }\n      },\n    },\n  });\n  return <Text accessibilityRole=\"link\" {...props} {...nativeProps} ref={ref} />;\n}) as ComponentType<LinkProps>;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}