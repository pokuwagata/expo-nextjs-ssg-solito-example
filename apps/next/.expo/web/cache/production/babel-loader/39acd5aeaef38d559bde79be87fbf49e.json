{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import React,{forwardRef}from'react';import Platform from\"react-native-web/dist/exports/Platform\";import Text from\"../primitives/Text\";import View from\"../primitives/View\";function createView(){var nativeProps=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return forwardRef(function(props,ref){return React.createElement(View,_extends({},nativeProps,props,{ref:ref}));});}export var UL=createView(Platform.select({web:{accessibilityRole:'list'}}));function isTextProps(props){return typeof props.children==='string';}export var LI=forwardRef(function(props,ref){if(isTextProps(props)){var _accessibilityRole=Platform.select({web:'listitem',default:props.accessibilityRole});return React.createElement(Text,_extends({},props,{accessibilityRole:_accessibilityRole,ref:ref}));}var accessibilityRole=Platform.select({web:'listitem',default:props.accessibilityRole});return React.createElement(View,_extends({},props,{accessibilityRole:accessibilityRole,ref:ref}));});","map":{"version":3,"sources":["../../src/elements/Lists.tsx"],"names":[],"mappings":"qDAAA,MAAO,CAAA,KAAP,EAA+B,UAA/B,KAAoE,OAApE,C,6DAGA,MAAO,CAAA,IAAP,0BACA,MAAO,CAAA,IAAP,0BAEA,QAAS,CAAA,UAAT,EAA+C,IAA3B,CAAA,WAA2B,2DAAF,EAAE,CAC7C,MAAO,CAAA,UAAU,CAAC,SAAC,KAAD,CAAmB,GAAnB,CAA0B,CAC1C,MAAO,CAAA,KAAA,CAAA,aAAA,CAAC,IAAD,CAAK,SAAA,EAAA,CAAK,WAAL,CAAsB,KAAtB,CAA2B,CAAE,GAAG,CAAE,GAAP,CAA3B,CAAL,CAAP,CACD,CAFgB,CAAjB,CAGD,CAED,MAAO,IAAM,CAAA,EAAE,CAAG,UAAU,CAC1B,QAAQ,CAAC,MAAT,CAAgB,CACd,GAAG,CAAE,CACH,iBAAiB,CAAE,MADhB,CADS,CAAhB,CAD0B,CAArB,CAQP,QAAS,CAAA,WAAT,CAAqB,KAArB,CAA+B,CAE7B,MAAO,OAAO,CAAA,KAAK,CAAC,QAAb,GAA0B,QAAjC,CACD,CAID,MAAO,IAAM,CAAA,EAAE,CAAG,UAAU,CAAC,SAAC,KAAD,CAAoC,GAApC,CAAgD,CAC3E,GAAI,WAAW,CAAC,KAAD,CAAf,CAAwB,CACtB,GAAM,CAAA,kBAAiB,CAAiC,QAAQ,CAAC,MAAT,CAAgB,CACtE,GAAG,CAAE,UADiE,CAEtE,OAAO,CAAE,KAAK,CAAC,iBAFuD,CAAhB,CAAxD,CAIA,MAAO,CAAA,KAAA,CAAA,aAAA,CAAC,IAAD,CAAK,SAAA,EAAA,CAAK,KAAL,CAAU,CAAE,iBAAiB,CAAE,kBAArB,CAAwC,GAAG,CAAE,GAA7C,CAAV,CAAL,CAAP,CACD,CACD,GAAM,CAAA,iBAAiB,CAAiC,QAAQ,CAAC,MAAT,CAAgB,CACtE,GAAG,CAAE,UADiE,CAEtE,OAAO,CAAE,KAAK,CAAC,iBAFuD,CAAhB,CAAxD,CAIA,MAAO,CAAA,KAAA,CAAA,aAAA,CAAC,IAAD,CAAK,SAAA,EAAA,CAAK,KAAL,CAAU,CAAE,iBAAiB,CAAE,iBAArB,CAAwC,GAAG,CAAE,GAA7C,CAAV,CAAL,CAAP,CACD,CAb2B,CAArB","sourcesContent":["import React, { ComponentType, forwardRef, PropsWithChildren } from 'react';\nimport { Platform } from 'react-native';\n\nimport Text, { TextProps } from '../primitives/Text';\nimport View, { ViewProps } from '../primitives/View';\n\nfunction createView(nativeProps: ViewProps = {}): ComponentType<ViewProps> {\n  return forwardRef((props: ViewProps, ref) => {\n    return <View {...nativeProps} {...props} ref={ref} />;\n  }) as ComponentType<ViewProps>;\n}\n\nexport const UL = createView(\n  Platform.select({\n    web: {\n      accessibilityRole: 'list',\n    },\n  })\n);\n\nfunction isTextProps(props: any): props is TextProps {\n  // Treat <li></li> as a Text element.\n  return typeof props.children === 'string';\n}\n\ntype LIProps = TextProps | ViewProps;\n\nexport const LI = forwardRef((props: PropsWithChildren<LIProps>, ref: any) => {\n  if (isTextProps(props)) {\n    const accessibilityRole: LIProps['accessibilityRole'] = Platform.select({\n      web: 'listitem',\n      default: props.accessibilityRole,\n    });\n    return <Text {...props} accessibilityRole={accessibilityRole} ref={ref} />;\n  }\n  const accessibilityRole: LIProps['accessibilityRole'] = Platform.select({\n    web: 'listitem',\n    default: props.accessibilityRole,\n  });\n  return <View {...props} accessibilityRole={accessibilityRole} ref={ref} />;\n}) as ComponentType<LIProps>;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}